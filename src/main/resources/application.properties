server.port = 8075

spring.main.banner-mode=off
logging.level.org.springframework=INFO

spring.datasource.url = jdbc:postgresql://localhost:5432/agentService
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.jpa.show-sql=true

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true


spring.jpa.hibernate.ddl-auto=update

#kafka local producer properties
spring.kafka.producer.bootstrap-servers=localhost:29092
spring.kafka.producer.client-id=pessoa-producer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer
#kafka local consumer properties
spring.kafka.consumer.bootstrap-servers=localhost:29092
spring.kafka.consumer.group-id=agent-id
spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer
#kafka schema registry configs
spring.kafka.properties.specific.avro.reader=true
auto.create.topics.enable=true