/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.orioninc.avro;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class MessageSchema extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -4535879021815668467L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"MessageSchema\",\"namespace\":\"com.orioninc.avro\",\"fields\":[{\"name\":\"requestType\",\"type\":\"string\"},{\"name\":\"agentId\",\"type\":\"string\"},{\"name\":\"customerId\",\"type\":\"string\"},{\"name\":\"message\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<MessageSchema> ENCODER =
      new BinaryMessageEncoder<MessageSchema>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<MessageSchema> DECODER =
      new BinaryMessageDecoder<MessageSchema>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<MessageSchema> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<MessageSchema> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<MessageSchema>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this MessageSchema to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a MessageSchema from a ByteBuffer. */
  public static MessageSchema fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence requestType;
  @Deprecated public java.lang.CharSequence agentId;
  @Deprecated public java.lang.CharSequence customerId;
  @Deprecated public java.lang.CharSequence message;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public MessageSchema() {}

  /**
   * All-args constructor.
   * @param requestType The new value for requestType
   * @param agentId The new value for agentId
   * @param customerId The new value for customerId
   * @param message The new value for message
   */
  public MessageSchema(java.lang.CharSequence requestType, java.lang.CharSequence agentId, java.lang.CharSequence customerId, java.lang.CharSequence message) {
    this.requestType = requestType;
    this.agentId = agentId;
    this.customerId = customerId;
    this.message = message;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return requestType;
    case 1: return agentId;
    case 2: return customerId;
    case 3: return message;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: requestType = (java.lang.CharSequence)value$; break;
    case 1: agentId = (java.lang.CharSequence)value$; break;
    case 2: customerId = (java.lang.CharSequence)value$; break;
    case 3: message = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'requestType' field.
   * @return The value of the 'requestType' field.
   */
  public java.lang.CharSequence getRequestType() {
    return requestType;
  }

  /**
   * Sets the value of the 'requestType' field.
   * @param value the value to set.
   */
  public void setRequestType(java.lang.CharSequence value) {
    this.requestType = value;
  }

  /**
   * Gets the value of the 'agentId' field.
   * @return The value of the 'agentId' field.
   */
  public java.lang.CharSequence getAgentId() {
    return agentId;
  }

  /**
   * Sets the value of the 'agentId' field.
   * @param value the value to set.
   */
  public void setAgentId(java.lang.CharSequence value) {
    this.agentId = value;
  }

  /**
   * Gets the value of the 'customerId' field.
   * @return The value of the 'customerId' field.
   */
  public java.lang.CharSequence getCustomerId() {
    return customerId;
  }

  /**
   * Sets the value of the 'customerId' field.
   * @param value the value to set.
   */
  public void setCustomerId(java.lang.CharSequence value) {
    this.customerId = value;
  }

  /**
   * Gets the value of the 'message' field.
   * @return The value of the 'message' field.
   */
  public java.lang.CharSequence getMessage() {
    return message;
  }

  /**
   * Sets the value of the 'message' field.
   * @param value the value to set.
   */
  public void setMessage(java.lang.CharSequence value) {
    this.message = value;
  }

  /**
   * Creates a new MessageSchema RecordBuilder.
   * @return A new MessageSchema RecordBuilder
   */
  public static com.orioninc.avro.MessageSchema.Builder newBuilder() {
    return new com.orioninc.avro.MessageSchema.Builder();
  }

  /**
   * Creates a new MessageSchema RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new MessageSchema RecordBuilder
   */
  public static com.orioninc.avro.MessageSchema.Builder newBuilder(com.orioninc.avro.MessageSchema.Builder other) {
    return new com.orioninc.avro.MessageSchema.Builder(other);
  }

  /**
   * Creates a new MessageSchema RecordBuilder by copying an existing MessageSchema instance.
   * @param other The existing instance to copy.
   * @return A new MessageSchema RecordBuilder
   */
  public static com.orioninc.avro.MessageSchema.Builder newBuilder(com.orioninc.avro.MessageSchema other) {
    return new com.orioninc.avro.MessageSchema.Builder(other);
  }

  /**
   * RecordBuilder for MessageSchema instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<MessageSchema>
    implements org.apache.avro.data.RecordBuilder<MessageSchema> {

    private java.lang.CharSequence requestType;
    private java.lang.CharSequence agentId;
    private java.lang.CharSequence customerId;
    private java.lang.CharSequence message;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.orioninc.avro.MessageSchema.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.requestType)) {
        this.requestType = data().deepCopy(fields()[0].schema(), other.requestType);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.agentId)) {
        this.agentId = data().deepCopy(fields()[1].schema(), other.agentId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.customerId)) {
        this.customerId = data().deepCopy(fields()[2].schema(), other.customerId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.message)) {
        this.message = data().deepCopy(fields()[3].schema(), other.message);
        fieldSetFlags()[3] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing MessageSchema instance
     * @param other The existing instance to copy.
     */
    private Builder(com.orioninc.avro.MessageSchema other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.requestType)) {
        this.requestType = data().deepCopy(fields()[0].schema(), other.requestType);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.agentId)) {
        this.agentId = data().deepCopy(fields()[1].schema(), other.agentId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.customerId)) {
        this.customerId = data().deepCopy(fields()[2].schema(), other.customerId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.message)) {
        this.message = data().deepCopy(fields()[3].schema(), other.message);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'requestType' field.
      * @return The value.
      */
    public java.lang.CharSequence getRequestType() {
      return requestType;
    }

    /**
      * Sets the value of the 'requestType' field.
      * @param value The value of 'requestType'.
      * @return This builder.
      */
    public com.orioninc.avro.MessageSchema.Builder setRequestType(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.requestType = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'requestType' field has been set.
      * @return True if the 'requestType' field has been set, false otherwise.
      */
    public boolean hasRequestType() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'requestType' field.
      * @return This builder.
      */
    public com.orioninc.avro.MessageSchema.Builder clearRequestType() {
      requestType = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'agentId' field.
      * @return The value.
      */
    public java.lang.CharSequence getAgentId() {
      return agentId;
    }

    /**
      * Sets the value of the 'agentId' field.
      * @param value The value of 'agentId'.
      * @return This builder.
      */
    public com.orioninc.avro.MessageSchema.Builder setAgentId(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.agentId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'agentId' field has been set.
      * @return True if the 'agentId' field has been set, false otherwise.
      */
    public boolean hasAgentId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'agentId' field.
      * @return This builder.
      */
    public com.orioninc.avro.MessageSchema.Builder clearAgentId() {
      agentId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'customerId' field.
      * @return The value.
      */
    public java.lang.CharSequence getCustomerId() {
      return customerId;
    }

    /**
      * Sets the value of the 'customerId' field.
      * @param value The value of 'customerId'.
      * @return This builder.
      */
    public com.orioninc.avro.MessageSchema.Builder setCustomerId(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.customerId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'customerId' field has been set.
      * @return True if the 'customerId' field has been set, false otherwise.
      */
    public boolean hasCustomerId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'customerId' field.
      * @return This builder.
      */
    public com.orioninc.avro.MessageSchema.Builder clearCustomerId() {
      customerId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'message' field.
      * @return The value.
      */
    public java.lang.CharSequence getMessage() {
      return message;
    }

    /**
      * Sets the value of the 'message' field.
      * @param value The value of 'message'.
      * @return This builder.
      */
    public com.orioninc.avro.MessageSchema.Builder setMessage(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.message = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'message' field has been set.
      * @return True if the 'message' field has been set, false otherwise.
      */
    public boolean hasMessage() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'message' field.
      * @return This builder.
      */
    public com.orioninc.avro.MessageSchema.Builder clearMessage() {
      message = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public MessageSchema build() {
      try {
        MessageSchema record = new MessageSchema();
        record.requestType = fieldSetFlags()[0] ? this.requestType : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.agentId = fieldSetFlags()[1] ? this.agentId : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.customerId = fieldSetFlags()[2] ? this.customerId : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.message = fieldSetFlags()[3] ? this.message : (java.lang.CharSequence) defaultValue(fields()[3]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<MessageSchema>
    WRITER$ = (org.apache.avro.io.DatumWriter<MessageSchema>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<MessageSchema>
    READER$ = (org.apache.avro.io.DatumReader<MessageSchema>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
